
LED_TEST2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a20  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a68  00000000  00000000  00000a74  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000490  00000000  00000000  000014dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 05 05 	call	0xa0a	; 0xa0a <main>
  64:	0c 94 0e 05 	jmp	0xa1c	; 0xa1c <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <GPIO_voidSetPinDDR>:




	void GPIO_voidSetPinDDR (u8  copy_u8Port ,u8 copy_u8Pin , u8 copy_u8Mode )
	{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <GPIO_voidSetPinDDR+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <GPIO_voidSetPinDDR+0x8>
  74:	0f 92       	push	r0
  76:	cd b7       	in	r28, 0x3d	; 61
  78:	de b7       	in	r29, 0x3e	; 62
  7a:	89 83       	std	Y+1, r24	; 0x01
  7c:	6a 83       	std	Y+2, r22	; 0x02
  7e:	4b 83       	std	Y+3, r20	; 0x03
		switch(copy_u8Port)
  80:	89 81       	ldd	r24, Y+1	; 0x01
  82:	28 2f       	mov	r18, r24
  84:	30 e0       	ldi	r19, 0x00	; 0
  86:	3d 83       	std	Y+5, r19	; 0x05
  88:	2c 83       	std	Y+4, r18	; 0x04
  8a:	8c 81       	ldd	r24, Y+4	; 0x04
  8c:	9d 81       	ldd	r25, Y+5	; 0x05
  8e:	81 30       	cpi	r24, 0x01	; 1
  90:	91 05       	cpc	r25, r1
  92:	09 f4       	brne	.+2      	; 0x96 <GPIO_voidSetPinDDR+0x2a>
  94:	43 c0       	rjmp	.+134    	; 0x11c <GPIO_voidSetPinDDR+0xb0>
  96:	2c 81       	ldd	r18, Y+4	; 0x04
  98:	3d 81       	ldd	r19, Y+5	; 0x05
  9a:	22 30       	cpi	r18, 0x02	; 2
  9c:	31 05       	cpc	r19, r1
  9e:	2c f4       	brge	.+10     	; 0xaa <GPIO_voidSetPinDDR+0x3e>
  a0:	8c 81       	ldd	r24, Y+4	; 0x04
  a2:	9d 81       	ldd	r25, Y+5	; 0x05
  a4:	00 97       	sbiw	r24, 0x00	; 0
  a6:	71 f0       	breq	.+28     	; 0xc4 <GPIO_voidSetPinDDR+0x58>
  a8:	bc c0       	rjmp	.+376    	; 0x222 <GPIO_voidSetPinDDR+0x1b6>
  aa:	2c 81       	ldd	r18, Y+4	; 0x04
  ac:	3d 81       	ldd	r19, Y+5	; 0x05
  ae:	22 30       	cpi	r18, 0x02	; 2
  b0:	31 05       	cpc	r19, r1
  b2:	09 f4       	brne	.+2      	; 0xb6 <GPIO_voidSetPinDDR+0x4a>
  b4:	5f c0       	rjmp	.+190    	; 0x174 <GPIO_voidSetPinDDR+0x108>
  b6:	8c 81       	ldd	r24, Y+4	; 0x04
  b8:	9d 81       	ldd	r25, Y+5	; 0x05
  ba:	83 30       	cpi	r24, 0x03	; 3
  bc:	91 05       	cpc	r25, r1
  be:	09 f4       	brne	.+2      	; 0xc2 <GPIO_voidSetPinDDR+0x56>
  c0:	85 c0       	rjmp	.+266    	; 0x1cc <GPIO_voidSetPinDDR+0x160>
  c2:	af c0       	rjmp	.+350    	; 0x222 <GPIO_voidSetPinDDR+0x1b6>
		{
			case GPIOA :
				if(copy_u8Mode ==OUTPUT )
  c4:	8b 81       	ldd	r24, Y+3	; 0x03
  c6:	81 30       	cpi	r24, 0x01	; 1
  c8:	a1 f4       	brne	.+40     	; 0xf2 <GPIO_voidSetPinDDR+0x86>
				{
					SET_BIT(DDRA ,copy_u8Pin);
  ca:	aa e3       	ldi	r26, 0x3A	; 58
  cc:	b0 e0       	ldi	r27, 0x00	; 0
  ce:	ea e3       	ldi	r30, 0x3A	; 58
  d0:	f0 e0       	ldi	r31, 0x00	; 0
  d2:	80 81       	ld	r24, Z
  d4:	48 2f       	mov	r20, r24
  d6:	8a 81       	ldd	r24, Y+2	; 0x02
  d8:	28 2f       	mov	r18, r24
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	02 2e       	mov	r0, r18
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <GPIO_voidSetPinDDR+0x7c>
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	0a 94       	dec	r0
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <GPIO_voidSetPinDDR+0x78>
  ec:	84 2b       	or	r24, r20
  ee:	8c 93       	st	X, r24
  f0:	98 c0       	rjmp	.+304    	; 0x222 <GPIO_voidSetPinDDR+0x1b6>
				}
				else {
					CLEAR_BIT(DDRA,copy_u8Pin);
  f2:	aa e3       	ldi	r26, 0x3A	; 58
  f4:	b0 e0       	ldi	r27, 0x00	; 0
  f6:	ea e3       	ldi	r30, 0x3A	; 58
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	80 81       	ld	r24, Z
  fc:	48 2f       	mov	r20, r24
  fe:	8a 81       	ldd	r24, Y+2	; 0x02
 100:	28 2f       	mov	r18, r24
 102:	30 e0       	ldi	r19, 0x00	; 0
 104:	81 e0       	ldi	r24, 0x01	; 1
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	02 2e       	mov	r0, r18
 10a:	02 c0       	rjmp	.+4      	; 0x110 <GPIO_voidSetPinDDR+0xa4>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	0a 94       	dec	r0
 112:	e2 f7       	brpl	.-8      	; 0x10c <GPIO_voidSetPinDDR+0xa0>
 114:	80 95       	com	r24
 116:	84 23       	and	r24, r20
 118:	8c 93       	st	X, r24
 11a:	83 c0       	rjmp	.+262    	; 0x222 <GPIO_voidSetPinDDR+0x1b6>
				}
				break;
			case GPIOB :
				if(copy_u8Mode ==OUTPUT )
 11c:	8b 81       	ldd	r24, Y+3	; 0x03
 11e:	81 30       	cpi	r24, 0x01	; 1
 120:	a1 f4       	brne	.+40     	; 0x14a <GPIO_voidSetPinDDR+0xde>
				{
					SET_BIT(DDRB ,copy_u8Pin);
 122:	a7 e3       	ldi	r26, 0x37	; 55
 124:	b0 e0       	ldi	r27, 0x00	; 0
 126:	e7 e3       	ldi	r30, 0x37	; 55
 128:	f0 e0       	ldi	r31, 0x00	; 0
 12a:	80 81       	ld	r24, Z
 12c:	48 2f       	mov	r20, r24
 12e:	8a 81       	ldd	r24, Y+2	; 0x02
 130:	28 2f       	mov	r18, r24
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	02 2e       	mov	r0, r18
 13a:	02 c0       	rjmp	.+4      	; 0x140 <GPIO_voidSetPinDDR+0xd4>
 13c:	88 0f       	add	r24, r24
 13e:	99 1f       	adc	r25, r25
 140:	0a 94       	dec	r0
 142:	e2 f7       	brpl	.-8      	; 0x13c <GPIO_voidSetPinDDR+0xd0>
 144:	84 2b       	or	r24, r20
 146:	8c 93       	st	X, r24
 148:	6c c0       	rjmp	.+216    	; 0x222 <GPIO_voidSetPinDDR+0x1b6>
				}
				else {
					CLEAR_BIT(DDRB,copy_u8Pin);
 14a:	a7 e3       	ldi	r26, 0x37	; 55
 14c:	b0 e0       	ldi	r27, 0x00	; 0
 14e:	e7 e3       	ldi	r30, 0x37	; 55
 150:	f0 e0       	ldi	r31, 0x00	; 0
 152:	80 81       	ld	r24, Z
 154:	48 2f       	mov	r20, r24
 156:	8a 81       	ldd	r24, Y+2	; 0x02
 158:	28 2f       	mov	r18, r24
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	02 2e       	mov	r0, r18
 162:	02 c0       	rjmp	.+4      	; 0x168 <GPIO_voidSetPinDDR+0xfc>
 164:	88 0f       	add	r24, r24
 166:	99 1f       	adc	r25, r25
 168:	0a 94       	dec	r0
 16a:	e2 f7       	brpl	.-8      	; 0x164 <GPIO_voidSetPinDDR+0xf8>
 16c:	80 95       	com	r24
 16e:	84 23       	and	r24, r20
 170:	8c 93       	st	X, r24
 172:	57 c0       	rjmp	.+174    	; 0x222 <GPIO_voidSetPinDDR+0x1b6>
				}
				break;
			case GPIOC :
				if(copy_u8Mode ==OUTPUT )
 174:	8b 81       	ldd	r24, Y+3	; 0x03
 176:	81 30       	cpi	r24, 0x01	; 1
 178:	a1 f4       	brne	.+40     	; 0x1a2 <GPIO_voidSetPinDDR+0x136>
				{
					SET_BIT(DDRC ,copy_u8Pin);
 17a:	a4 e3       	ldi	r26, 0x34	; 52
 17c:	b0 e0       	ldi	r27, 0x00	; 0
 17e:	e4 e3       	ldi	r30, 0x34	; 52
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	80 81       	ld	r24, Z
 184:	48 2f       	mov	r20, r24
 186:	8a 81       	ldd	r24, Y+2	; 0x02
 188:	28 2f       	mov	r18, r24
 18a:	30 e0       	ldi	r19, 0x00	; 0
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	02 2e       	mov	r0, r18
 192:	02 c0       	rjmp	.+4      	; 0x198 <GPIO_voidSetPinDDR+0x12c>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	0a 94       	dec	r0
 19a:	e2 f7       	brpl	.-8      	; 0x194 <GPIO_voidSetPinDDR+0x128>
 19c:	84 2b       	or	r24, r20
 19e:	8c 93       	st	X, r24
 1a0:	40 c0       	rjmp	.+128    	; 0x222 <GPIO_voidSetPinDDR+0x1b6>
				}
				else {
					CLEAR_BIT(DDRC,copy_u8Pin);
 1a2:	a4 e3       	ldi	r26, 0x34	; 52
 1a4:	b0 e0       	ldi	r27, 0x00	; 0
 1a6:	e4 e3       	ldi	r30, 0x34	; 52
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	80 81       	ld	r24, Z
 1ac:	48 2f       	mov	r20, r24
 1ae:	8a 81       	ldd	r24, Y+2	; 0x02
 1b0:	28 2f       	mov	r18, r24
 1b2:	30 e0       	ldi	r19, 0x00	; 0
 1b4:	81 e0       	ldi	r24, 0x01	; 1
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	02 2e       	mov	r0, r18
 1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <GPIO_voidSetPinDDR+0x154>
 1bc:	88 0f       	add	r24, r24
 1be:	99 1f       	adc	r25, r25
 1c0:	0a 94       	dec	r0
 1c2:	e2 f7       	brpl	.-8      	; 0x1bc <GPIO_voidSetPinDDR+0x150>
 1c4:	80 95       	com	r24
 1c6:	84 23       	and	r24, r20
 1c8:	8c 93       	st	X, r24
 1ca:	2b c0       	rjmp	.+86     	; 0x222 <GPIO_voidSetPinDDR+0x1b6>
				}
				break;
			case GPIOD :
				if(copy_u8Mode ==OUTPUT )
 1cc:	8b 81       	ldd	r24, Y+3	; 0x03
 1ce:	81 30       	cpi	r24, 0x01	; 1
 1d0:	a1 f4       	brne	.+40     	; 0x1fa <GPIO_voidSetPinDDR+0x18e>
				{
					SET_BIT(DDRD ,copy_u8Pin);
 1d2:	a1 e3       	ldi	r26, 0x31	; 49
 1d4:	b0 e0       	ldi	r27, 0x00	; 0
 1d6:	e1 e3       	ldi	r30, 0x31	; 49
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	48 2f       	mov	r20, r24
 1de:	8a 81       	ldd	r24, Y+2	; 0x02
 1e0:	28 2f       	mov	r18, r24
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	02 2e       	mov	r0, r18
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <GPIO_voidSetPinDDR+0x184>
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	0a 94       	dec	r0
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <GPIO_voidSetPinDDR+0x180>
 1f4:	84 2b       	or	r24, r20
 1f6:	8c 93       	st	X, r24
 1f8:	14 c0       	rjmp	.+40     	; 0x222 <GPIO_voidSetPinDDR+0x1b6>
				}
				else {
					CLEAR_BIT(DDRD,copy_u8Pin);
 1fa:	a1 e3       	ldi	r26, 0x31	; 49
 1fc:	b0 e0       	ldi	r27, 0x00	; 0
 1fe:	e1 e3       	ldi	r30, 0x31	; 49
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	80 81       	ld	r24, Z
 204:	48 2f       	mov	r20, r24
 206:	8a 81       	ldd	r24, Y+2	; 0x02
 208:	28 2f       	mov	r18, r24
 20a:	30 e0       	ldi	r19, 0x00	; 0
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	02 2e       	mov	r0, r18
 212:	02 c0       	rjmp	.+4      	; 0x218 <GPIO_voidSetPinDDR+0x1ac>
 214:	88 0f       	add	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	0a 94       	dec	r0
 21a:	e2 f7       	brpl	.-8      	; 0x214 <GPIO_voidSetPinDDR+0x1a8>
 21c:	80 95       	com	r24
 21e:	84 23       	and	r24, r20
 220:	8c 93       	st	X, r24
				}
				break;	
			default:
				break;
		}
	}
 222:	0f 90       	pop	r0
 224:	0f 90       	pop	r0
 226:	0f 90       	pop	r0
 228:	0f 90       	pop	r0
 22a:	0f 90       	pop	r0
 22c:	cf 91       	pop	r28
 22e:	df 91       	pop	r29
 230:	08 95       	ret

00000232 <GPIO_voidWritePin>:
	
	void GPIO_voidWritePin (u8  copy_u8Port ,u8 copy_u8Pin , u8 copy_u8Value )
	{
 232:	df 93       	push	r29
 234:	cf 93       	push	r28
 236:	00 d0       	rcall	.+0      	; 0x238 <GPIO_voidWritePin+0x6>
 238:	00 d0       	rcall	.+0      	; 0x23a <GPIO_voidWritePin+0x8>
 23a:	0f 92       	push	r0
 23c:	cd b7       	in	r28, 0x3d	; 61
 23e:	de b7       	in	r29, 0x3e	; 62
 240:	89 83       	std	Y+1, r24	; 0x01
 242:	6a 83       	std	Y+2, r22	; 0x02
 244:	4b 83       	std	Y+3, r20	; 0x03
		switch(copy_u8Port)
 246:	89 81       	ldd	r24, Y+1	; 0x01
 248:	28 2f       	mov	r18, r24
 24a:	30 e0       	ldi	r19, 0x00	; 0
 24c:	3d 83       	std	Y+5, r19	; 0x05
 24e:	2c 83       	std	Y+4, r18	; 0x04
 250:	8c 81       	ldd	r24, Y+4	; 0x04
 252:	9d 81       	ldd	r25, Y+5	; 0x05
 254:	81 30       	cpi	r24, 0x01	; 1
 256:	91 05       	cpc	r25, r1
 258:	09 f4       	brne	.+2      	; 0x25c <GPIO_voidWritePin+0x2a>
 25a:	43 c0       	rjmp	.+134    	; 0x2e2 <GPIO_voidWritePin+0xb0>
 25c:	2c 81       	ldd	r18, Y+4	; 0x04
 25e:	3d 81       	ldd	r19, Y+5	; 0x05
 260:	22 30       	cpi	r18, 0x02	; 2
 262:	31 05       	cpc	r19, r1
 264:	2c f4       	brge	.+10     	; 0x270 <GPIO_voidWritePin+0x3e>
 266:	8c 81       	ldd	r24, Y+4	; 0x04
 268:	9d 81       	ldd	r25, Y+5	; 0x05
 26a:	00 97       	sbiw	r24, 0x00	; 0
 26c:	71 f0       	breq	.+28     	; 0x28a <GPIO_voidWritePin+0x58>
 26e:	bc c0       	rjmp	.+376    	; 0x3e8 <GPIO_voidWritePin+0x1b6>
 270:	2c 81       	ldd	r18, Y+4	; 0x04
 272:	3d 81       	ldd	r19, Y+5	; 0x05
 274:	22 30       	cpi	r18, 0x02	; 2
 276:	31 05       	cpc	r19, r1
 278:	09 f4       	brne	.+2      	; 0x27c <GPIO_voidWritePin+0x4a>
 27a:	5f c0       	rjmp	.+190    	; 0x33a <GPIO_voidWritePin+0x108>
 27c:	8c 81       	ldd	r24, Y+4	; 0x04
 27e:	9d 81       	ldd	r25, Y+5	; 0x05
 280:	83 30       	cpi	r24, 0x03	; 3
 282:	91 05       	cpc	r25, r1
 284:	09 f4       	brne	.+2      	; 0x288 <GPIO_voidWritePin+0x56>
 286:	85 c0       	rjmp	.+266    	; 0x392 <GPIO_voidWritePin+0x160>
 288:	af c0       	rjmp	.+350    	; 0x3e8 <GPIO_voidWritePin+0x1b6>
		{
			case GPIOA :
				if(copy_u8Value ==HIGH )
 28a:	8b 81       	ldd	r24, Y+3	; 0x03
 28c:	81 30       	cpi	r24, 0x01	; 1
 28e:	a1 f4       	brne	.+40     	; 0x2b8 <GPIO_voidWritePin+0x86>
				{
					SET_BIT(PORTA ,copy_u8Pin);
 290:	ab e3       	ldi	r26, 0x3B	; 59
 292:	b0 e0       	ldi	r27, 0x00	; 0
 294:	eb e3       	ldi	r30, 0x3B	; 59
 296:	f0 e0       	ldi	r31, 0x00	; 0
 298:	80 81       	ld	r24, Z
 29a:	48 2f       	mov	r20, r24
 29c:	8a 81       	ldd	r24, Y+2	; 0x02
 29e:	28 2f       	mov	r18, r24
 2a0:	30 e0       	ldi	r19, 0x00	; 0
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	02 2e       	mov	r0, r18
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <GPIO_voidWritePin+0x7c>
 2aa:	88 0f       	add	r24, r24
 2ac:	99 1f       	adc	r25, r25
 2ae:	0a 94       	dec	r0
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <GPIO_voidWritePin+0x78>
 2b2:	84 2b       	or	r24, r20
 2b4:	8c 93       	st	X, r24
 2b6:	98 c0       	rjmp	.+304    	; 0x3e8 <GPIO_voidWritePin+0x1b6>
				}
				else {
					CLEAR_BIT(PORTA,copy_u8Pin);
 2b8:	ab e3       	ldi	r26, 0x3B	; 59
 2ba:	b0 e0       	ldi	r27, 0x00	; 0
 2bc:	eb e3       	ldi	r30, 0x3B	; 59
 2be:	f0 e0       	ldi	r31, 0x00	; 0
 2c0:	80 81       	ld	r24, Z
 2c2:	48 2f       	mov	r20, r24
 2c4:	8a 81       	ldd	r24, Y+2	; 0x02
 2c6:	28 2f       	mov	r18, r24
 2c8:	30 e0       	ldi	r19, 0x00	; 0
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	02 2e       	mov	r0, r18
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <GPIO_voidWritePin+0xa4>
 2d2:	88 0f       	add	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	0a 94       	dec	r0
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <GPIO_voidWritePin+0xa0>
 2da:	80 95       	com	r24
 2dc:	84 23       	and	r24, r20
 2de:	8c 93       	st	X, r24
 2e0:	83 c0       	rjmp	.+262    	; 0x3e8 <GPIO_voidWritePin+0x1b6>
				}
				break;
			case GPIOB :
				if(copy_u8Value ==HIGH )
 2e2:	8b 81       	ldd	r24, Y+3	; 0x03
 2e4:	81 30       	cpi	r24, 0x01	; 1
 2e6:	a1 f4       	brne	.+40     	; 0x310 <GPIO_voidWritePin+0xde>
				{
					SET_BIT(PORTB ,copy_u8Pin);
 2e8:	a8 e3       	ldi	r26, 0x38	; 56
 2ea:	b0 e0       	ldi	r27, 0x00	; 0
 2ec:	e8 e3       	ldi	r30, 0x38	; 56
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	80 81       	ld	r24, Z
 2f2:	48 2f       	mov	r20, r24
 2f4:	8a 81       	ldd	r24, Y+2	; 0x02
 2f6:	28 2f       	mov	r18, r24
 2f8:	30 e0       	ldi	r19, 0x00	; 0
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	02 2e       	mov	r0, r18
 300:	02 c0       	rjmp	.+4      	; 0x306 <GPIO_voidWritePin+0xd4>
 302:	88 0f       	add	r24, r24
 304:	99 1f       	adc	r25, r25
 306:	0a 94       	dec	r0
 308:	e2 f7       	brpl	.-8      	; 0x302 <GPIO_voidWritePin+0xd0>
 30a:	84 2b       	or	r24, r20
 30c:	8c 93       	st	X, r24
 30e:	6c c0       	rjmp	.+216    	; 0x3e8 <GPIO_voidWritePin+0x1b6>
				}
				else {
					CLEAR_BIT(PORTB,copy_u8Pin);
 310:	a8 e3       	ldi	r26, 0x38	; 56
 312:	b0 e0       	ldi	r27, 0x00	; 0
 314:	e8 e3       	ldi	r30, 0x38	; 56
 316:	f0 e0       	ldi	r31, 0x00	; 0
 318:	80 81       	ld	r24, Z
 31a:	48 2f       	mov	r20, r24
 31c:	8a 81       	ldd	r24, Y+2	; 0x02
 31e:	28 2f       	mov	r18, r24
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	90 e0       	ldi	r25, 0x00	; 0
 326:	02 2e       	mov	r0, r18
 328:	02 c0       	rjmp	.+4      	; 0x32e <GPIO_voidWritePin+0xfc>
 32a:	88 0f       	add	r24, r24
 32c:	99 1f       	adc	r25, r25
 32e:	0a 94       	dec	r0
 330:	e2 f7       	brpl	.-8      	; 0x32a <GPIO_voidWritePin+0xf8>
 332:	80 95       	com	r24
 334:	84 23       	and	r24, r20
 336:	8c 93       	st	X, r24
 338:	57 c0       	rjmp	.+174    	; 0x3e8 <GPIO_voidWritePin+0x1b6>
				}
				break;
			case GPIOC :
				if(copy_u8Value ==HIGH )
 33a:	8b 81       	ldd	r24, Y+3	; 0x03
 33c:	81 30       	cpi	r24, 0x01	; 1
 33e:	a1 f4       	brne	.+40     	; 0x368 <GPIO_voidWritePin+0x136>
				{
					SET_BIT(PORTC ,copy_u8Pin);
 340:	a5 e3       	ldi	r26, 0x35	; 53
 342:	b0 e0       	ldi	r27, 0x00	; 0
 344:	e5 e3       	ldi	r30, 0x35	; 53
 346:	f0 e0       	ldi	r31, 0x00	; 0
 348:	80 81       	ld	r24, Z
 34a:	48 2f       	mov	r20, r24
 34c:	8a 81       	ldd	r24, Y+2	; 0x02
 34e:	28 2f       	mov	r18, r24
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	02 2e       	mov	r0, r18
 358:	02 c0       	rjmp	.+4      	; 0x35e <GPIO_voidWritePin+0x12c>
 35a:	88 0f       	add	r24, r24
 35c:	99 1f       	adc	r25, r25
 35e:	0a 94       	dec	r0
 360:	e2 f7       	brpl	.-8      	; 0x35a <GPIO_voidWritePin+0x128>
 362:	84 2b       	or	r24, r20
 364:	8c 93       	st	X, r24
 366:	40 c0       	rjmp	.+128    	; 0x3e8 <GPIO_voidWritePin+0x1b6>
				}
				else {
					CLEAR_BIT(PORTC,copy_u8Pin);
 368:	a5 e3       	ldi	r26, 0x35	; 53
 36a:	b0 e0       	ldi	r27, 0x00	; 0
 36c:	e5 e3       	ldi	r30, 0x35	; 53
 36e:	f0 e0       	ldi	r31, 0x00	; 0
 370:	80 81       	ld	r24, Z
 372:	48 2f       	mov	r20, r24
 374:	8a 81       	ldd	r24, Y+2	; 0x02
 376:	28 2f       	mov	r18, r24
 378:	30 e0       	ldi	r19, 0x00	; 0
 37a:	81 e0       	ldi	r24, 0x01	; 1
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	02 2e       	mov	r0, r18
 380:	02 c0       	rjmp	.+4      	; 0x386 <GPIO_voidWritePin+0x154>
 382:	88 0f       	add	r24, r24
 384:	99 1f       	adc	r25, r25
 386:	0a 94       	dec	r0
 388:	e2 f7       	brpl	.-8      	; 0x382 <GPIO_voidWritePin+0x150>
 38a:	80 95       	com	r24
 38c:	84 23       	and	r24, r20
 38e:	8c 93       	st	X, r24
 390:	2b c0       	rjmp	.+86     	; 0x3e8 <GPIO_voidWritePin+0x1b6>
				}
				break;
			case GPIOD :
				if(copy_u8Value == HIGH )
 392:	8b 81       	ldd	r24, Y+3	; 0x03
 394:	81 30       	cpi	r24, 0x01	; 1
 396:	a1 f4       	brne	.+40     	; 0x3c0 <GPIO_voidWritePin+0x18e>
				{
					SET_BIT(PORTD ,copy_u8Pin);
 398:	a2 e3       	ldi	r26, 0x32	; 50
 39a:	b0 e0       	ldi	r27, 0x00	; 0
 39c:	e2 e3       	ldi	r30, 0x32	; 50
 39e:	f0 e0       	ldi	r31, 0x00	; 0
 3a0:	80 81       	ld	r24, Z
 3a2:	48 2f       	mov	r20, r24
 3a4:	8a 81       	ldd	r24, Y+2	; 0x02
 3a6:	28 2f       	mov	r18, r24
 3a8:	30 e0       	ldi	r19, 0x00	; 0
 3aa:	81 e0       	ldi	r24, 0x01	; 1
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	02 2e       	mov	r0, r18
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <GPIO_voidWritePin+0x184>
 3b2:	88 0f       	add	r24, r24
 3b4:	99 1f       	adc	r25, r25
 3b6:	0a 94       	dec	r0
 3b8:	e2 f7       	brpl	.-8      	; 0x3b2 <GPIO_voidWritePin+0x180>
 3ba:	84 2b       	or	r24, r20
 3bc:	8c 93       	st	X, r24
 3be:	14 c0       	rjmp	.+40     	; 0x3e8 <GPIO_voidWritePin+0x1b6>
				}
				else {
					CLEAR_BIT(PORTD,copy_u8Pin);
 3c0:	a2 e3       	ldi	r26, 0x32	; 50
 3c2:	b0 e0       	ldi	r27, 0x00	; 0
 3c4:	e2 e3       	ldi	r30, 0x32	; 50
 3c6:	f0 e0       	ldi	r31, 0x00	; 0
 3c8:	80 81       	ld	r24, Z
 3ca:	48 2f       	mov	r20, r24
 3cc:	8a 81       	ldd	r24, Y+2	; 0x02
 3ce:	28 2f       	mov	r18, r24
 3d0:	30 e0       	ldi	r19, 0x00	; 0
 3d2:	81 e0       	ldi	r24, 0x01	; 1
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	02 2e       	mov	r0, r18
 3d8:	02 c0       	rjmp	.+4      	; 0x3de <GPIO_voidWritePin+0x1ac>
 3da:	88 0f       	add	r24, r24
 3dc:	99 1f       	adc	r25, r25
 3de:	0a 94       	dec	r0
 3e0:	e2 f7       	brpl	.-8      	; 0x3da <GPIO_voidWritePin+0x1a8>
 3e2:	80 95       	com	r24
 3e4:	84 23       	and	r24, r20
 3e6:	8c 93       	st	X, r24
				break;	
			default:
				break;
		}
		
	}
 3e8:	0f 90       	pop	r0
 3ea:	0f 90       	pop	r0
 3ec:	0f 90       	pop	r0
 3ee:	0f 90       	pop	r0
 3f0:	0f 90       	pop	r0
 3f2:	cf 91       	pop	r28
 3f4:	df 91       	pop	r29
 3f6:	08 95       	ret

000003f8 <GPIO_u8ReadPin>:
	
	u8	GPIO_u8ReadPin(	u8  copy_u8Port ,u8 copy_u8Pin )
	{
 3f8:	df 93       	push	r29
 3fa:	cf 93       	push	r28
 3fc:	00 d0       	rcall	.+0      	; 0x3fe <GPIO_u8ReadPin+0x6>
 3fe:	00 d0       	rcall	.+0      	; 0x400 <GPIO_u8ReadPin+0x8>
 400:	0f 92       	push	r0
 402:	cd b7       	in	r28, 0x3d	; 61
 404:	de b7       	in	r29, 0x3e	; 62
 406:	8a 83       	std	Y+2, r24	; 0x02
 408:	6b 83       	std	Y+3, r22	; 0x03
		u8 Local_u8ReturnValue ;
		switch(copy_u8Port){
 40a:	8a 81       	ldd	r24, Y+2	; 0x02
 40c:	28 2f       	mov	r18, r24
 40e:	30 e0       	ldi	r19, 0x00	; 0
 410:	3d 83       	std	Y+5, r19	; 0x05
 412:	2c 83       	std	Y+4, r18	; 0x04
 414:	4c 81       	ldd	r20, Y+4	; 0x04
 416:	5d 81       	ldd	r21, Y+5	; 0x05
 418:	41 30       	cpi	r20, 0x01	; 1
 41a:	51 05       	cpc	r21, r1
 41c:	b1 f1       	breq	.+108    	; 0x48a <GPIO_u8ReadPin+0x92>
 41e:	8c 81       	ldd	r24, Y+4	; 0x04
 420:	9d 81       	ldd	r25, Y+5	; 0x05
 422:	82 30       	cpi	r24, 0x02	; 2
 424:	91 05       	cpc	r25, r1
 426:	34 f4       	brge	.+12     	; 0x434 <GPIO_u8ReadPin+0x3c>
 428:	2c 81       	ldd	r18, Y+4	; 0x04
 42a:	3d 81       	ldd	r19, Y+5	; 0x05
 42c:	21 15       	cp	r18, r1
 42e:	31 05       	cpc	r19, r1
 430:	71 f0       	breq	.+28     	; 0x44e <GPIO_u8ReadPin+0x56>
 432:	84 c0       	rjmp	.+264    	; 0x53c <GPIO_u8ReadPin+0x144>
 434:	4c 81       	ldd	r20, Y+4	; 0x04
 436:	5d 81       	ldd	r21, Y+5	; 0x05
 438:	42 30       	cpi	r20, 0x02	; 2
 43a:	51 05       	cpc	r21, r1
 43c:	09 f4       	brne	.+2      	; 0x440 <GPIO_u8ReadPin+0x48>
 43e:	43 c0       	rjmp	.+134    	; 0x4c6 <GPIO_u8ReadPin+0xce>
 440:	8c 81       	ldd	r24, Y+4	; 0x04
 442:	9d 81       	ldd	r25, Y+5	; 0x05
 444:	83 30       	cpi	r24, 0x03	; 3
 446:	91 05       	cpc	r25, r1
 448:	09 f4       	brne	.+2      	; 0x44c <GPIO_u8ReadPin+0x54>
 44a:	5b c0       	rjmp	.+182    	; 0x502 <GPIO_u8ReadPin+0x10a>
 44c:	77 c0       	rjmp	.+238    	; 0x53c <GPIO_u8ReadPin+0x144>
			case GPIOA :
				Local_u8ReturnValue = GET_BIT(PINA,copy_u8Pin);
 44e:	e9 e3       	ldi	r30, 0x39	; 57
 450:	f0 e0       	ldi	r31, 0x00	; 0
 452:	80 81       	ld	r24, Z
 454:	48 2f       	mov	r20, r24
 456:	50 e0       	ldi	r21, 0x00	; 0
 458:	8b 81       	ldd	r24, Y+3	; 0x03
 45a:	28 2f       	mov	r18, r24
 45c:	30 e0       	ldi	r19, 0x00	; 0
 45e:	81 e0       	ldi	r24, 0x01	; 1
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	02 c0       	rjmp	.+4      	; 0x468 <GPIO_u8ReadPin+0x70>
 464:	88 0f       	add	r24, r24
 466:	99 1f       	adc	r25, r25
 468:	2a 95       	dec	r18
 46a:	e2 f7       	brpl	.-8      	; 0x464 <GPIO_u8ReadPin+0x6c>
 46c:	9a 01       	movw	r18, r20
 46e:	28 23       	and	r18, r24
 470:	39 23       	and	r19, r25
 472:	8b 81       	ldd	r24, Y+3	; 0x03
 474:	88 2f       	mov	r24, r24
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	a9 01       	movw	r20, r18
 47a:	02 c0       	rjmp	.+4      	; 0x480 <GPIO_u8ReadPin+0x88>
 47c:	55 95       	asr	r21
 47e:	47 95       	ror	r20
 480:	8a 95       	dec	r24
 482:	e2 f7       	brpl	.-8      	; 0x47c <GPIO_u8ReadPin+0x84>
 484:	ca 01       	movw	r24, r20
 486:	89 83       	std	Y+1, r24	; 0x01
 488:	59 c0       	rjmp	.+178    	; 0x53c <GPIO_u8ReadPin+0x144>
				break ;
			case GPIOB :
				Local_u8ReturnValue = GET_BIT(PINB,copy_u8Pin);
 48a:	e6 e3       	ldi	r30, 0x36	; 54
 48c:	f0 e0       	ldi	r31, 0x00	; 0
 48e:	80 81       	ld	r24, Z
 490:	48 2f       	mov	r20, r24
 492:	50 e0       	ldi	r21, 0x00	; 0
 494:	8b 81       	ldd	r24, Y+3	; 0x03
 496:	28 2f       	mov	r18, r24
 498:	30 e0       	ldi	r19, 0x00	; 0
 49a:	81 e0       	ldi	r24, 0x01	; 1
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	02 c0       	rjmp	.+4      	; 0x4a4 <GPIO_u8ReadPin+0xac>
 4a0:	88 0f       	add	r24, r24
 4a2:	99 1f       	adc	r25, r25
 4a4:	2a 95       	dec	r18
 4a6:	e2 f7       	brpl	.-8      	; 0x4a0 <GPIO_u8ReadPin+0xa8>
 4a8:	9a 01       	movw	r18, r20
 4aa:	28 23       	and	r18, r24
 4ac:	39 23       	and	r19, r25
 4ae:	8b 81       	ldd	r24, Y+3	; 0x03
 4b0:	88 2f       	mov	r24, r24
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	a9 01       	movw	r20, r18
 4b6:	02 c0       	rjmp	.+4      	; 0x4bc <GPIO_u8ReadPin+0xc4>
 4b8:	55 95       	asr	r21
 4ba:	47 95       	ror	r20
 4bc:	8a 95       	dec	r24
 4be:	e2 f7       	brpl	.-8      	; 0x4b8 <GPIO_u8ReadPin+0xc0>
 4c0:	ca 01       	movw	r24, r20
 4c2:	89 83       	std	Y+1, r24	; 0x01
 4c4:	3b c0       	rjmp	.+118    	; 0x53c <GPIO_u8ReadPin+0x144>
				break ;
			case GPIOC :
				Local_u8ReturnValue = GET_BIT(PINC,copy_u8Pin);
 4c6:	e3 e3       	ldi	r30, 0x33	; 51
 4c8:	f0 e0       	ldi	r31, 0x00	; 0
 4ca:	80 81       	ld	r24, Z
 4cc:	48 2f       	mov	r20, r24
 4ce:	50 e0       	ldi	r21, 0x00	; 0
 4d0:	8b 81       	ldd	r24, Y+3	; 0x03
 4d2:	28 2f       	mov	r18, r24
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <GPIO_u8ReadPin+0xe8>
 4dc:	88 0f       	add	r24, r24
 4de:	99 1f       	adc	r25, r25
 4e0:	2a 95       	dec	r18
 4e2:	e2 f7       	brpl	.-8      	; 0x4dc <GPIO_u8ReadPin+0xe4>
 4e4:	9a 01       	movw	r18, r20
 4e6:	28 23       	and	r18, r24
 4e8:	39 23       	and	r19, r25
 4ea:	8b 81       	ldd	r24, Y+3	; 0x03
 4ec:	88 2f       	mov	r24, r24
 4ee:	90 e0       	ldi	r25, 0x00	; 0
 4f0:	a9 01       	movw	r20, r18
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <GPIO_u8ReadPin+0x100>
 4f4:	55 95       	asr	r21
 4f6:	47 95       	ror	r20
 4f8:	8a 95       	dec	r24
 4fa:	e2 f7       	brpl	.-8      	; 0x4f4 <GPIO_u8ReadPin+0xfc>
 4fc:	ca 01       	movw	r24, r20
 4fe:	89 83       	std	Y+1, r24	; 0x01
 500:	1d c0       	rjmp	.+58     	; 0x53c <GPIO_u8ReadPin+0x144>
				break ;
			case GPIOD :
				Local_u8ReturnValue = GET_BIT(PIND,copy_u8Pin);
 502:	e0 e3       	ldi	r30, 0x30	; 48
 504:	f0 e0       	ldi	r31, 0x00	; 0
 506:	80 81       	ld	r24, Z
 508:	48 2f       	mov	r20, r24
 50a:	50 e0       	ldi	r21, 0x00	; 0
 50c:	8b 81       	ldd	r24, Y+3	; 0x03
 50e:	28 2f       	mov	r18, r24
 510:	30 e0       	ldi	r19, 0x00	; 0
 512:	81 e0       	ldi	r24, 0x01	; 1
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	02 c0       	rjmp	.+4      	; 0x51c <GPIO_u8ReadPin+0x124>
 518:	88 0f       	add	r24, r24
 51a:	99 1f       	adc	r25, r25
 51c:	2a 95       	dec	r18
 51e:	e2 f7       	brpl	.-8      	; 0x518 <GPIO_u8ReadPin+0x120>
 520:	9a 01       	movw	r18, r20
 522:	28 23       	and	r18, r24
 524:	39 23       	and	r19, r25
 526:	8b 81       	ldd	r24, Y+3	; 0x03
 528:	88 2f       	mov	r24, r24
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	a9 01       	movw	r20, r18
 52e:	02 c0       	rjmp	.+4      	; 0x534 <GPIO_u8ReadPin+0x13c>
 530:	55 95       	asr	r21
 532:	47 95       	ror	r20
 534:	8a 95       	dec	r24
 536:	e2 f7       	brpl	.-8      	; 0x530 <GPIO_u8ReadPin+0x138>
 538:	ca 01       	movw	r24, r20
 53a:	89 83       	std	Y+1, r24	; 0x01
				break ;
			default:
			break;
		}
		return Local_u8ReturnValue ;
 53c:	89 81       	ldd	r24, Y+1	; 0x01
		
	}
 53e:	0f 90       	pop	r0
 540:	0f 90       	pop	r0
 542:	0f 90       	pop	r0
 544:	0f 90       	pop	r0
 546:	0f 90       	pop	r0
 548:	cf 91       	pop	r28
 54a:	df 91       	pop	r29
 54c:	08 95       	ret

0000054e <GPIO_voidTogPin>:
	
	void GPIO_voidTogPin 	( u8 copy_u8Port , u8 copy_u8Pin )
	{
 54e:	df 93       	push	r29
 550:	cf 93       	push	r28
 552:	00 d0       	rcall	.+0      	; 0x554 <GPIO_voidTogPin+0x6>
 554:	00 d0       	rcall	.+0      	; 0x556 <GPIO_voidTogPin+0x8>
 556:	cd b7       	in	r28, 0x3d	; 61
 558:	de b7       	in	r29, 0x3e	; 62
 55a:	89 83       	std	Y+1, r24	; 0x01
 55c:	6a 83       	std	Y+2, r22	; 0x02
		switch(copy_u8Port){
 55e:	89 81       	ldd	r24, Y+1	; 0x01
 560:	28 2f       	mov	r18, r24
 562:	30 e0       	ldi	r19, 0x00	; 0
 564:	3c 83       	std	Y+4, r19	; 0x04
 566:	2b 83       	std	Y+3, r18	; 0x03
 568:	8b 81       	ldd	r24, Y+3	; 0x03
 56a:	9c 81       	ldd	r25, Y+4	; 0x04
 56c:	81 30       	cpi	r24, 0x01	; 1
 56e:	91 05       	cpc	r25, r1
 570:	49 f1       	breq	.+82     	; 0x5c4 <GPIO_voidTogPin+0x76>
 572:	2b 81       	ldd	r18, Y+3	; 0x03
 574:	3c 81       	ldd	r19, Y+4	; 0x04
 576:	22 30       	cpi	r18, 0x02	; 2
 578:	31 05       	cpc	r19, r1
 57a:	2c f4       	brge	.+10     	; 0x586 <GPIO_voidTogPin+0x38>
 57c:	8b 81       	ldd	r24, Y+3	; 0x03
 57e:	9c 81       	ldd	r25, Y+4	; 0x04
 580:	00 97       	sbiw	r24, 0x00	; 0
 582:	61 f0       	breq	.+24     	; 0x59c <GPIO_voidTogPin+0x4e>
 584:	5a c0       	rjmp	.+180    	; 0x63a <GPIO_voidTogPin+0xec>
 586:	2b 81       	ldd	r18, Y+3	; 0x03
 588:	3c 81       	ldd	r19, Y+4	; 0x04
 58a:	22 30       	cpi	r18, 0x02	; 2
 58c:	31 05       	cpc	r19, r1
 58e:	71 f1       	breq	.+92     	; 0x5ec <GPIO_voidTogPin+0x9e>
 590:	8b 81       	ldd	r24, Y+3	; 0x03
 592:	9c 81       	ldd	r25, Y+4	; 0x04
 594:	83 30       	cpi	r24, 0x03	; 3
 596:	91 05       	cpc	r25, r1
 598:	e9 f1       	breq	.+122    	; 0x614 <GPIO_voidTogPin+0xc6>
 59a:	4f c0       	rjmp	.+158    	; 0x63a <GPIO_voidTogPin+0xec>
			case GPIOA :
				TOG_BIT(PORTA,copy_u8Pin);
 59c:	ab e3       	ldi	r26, 0x3B	; 59
 59e:	b0 e0       	ldi	r27, 0x00	; 0
 5a0:	eb e3       	ldi	r30, 0x3B	; 59
 5a2:	f0 e0       	ldi	r31, 0x00	; 0
 5a4:	80 81       	ld	r24, Z
 5a6:	48 2f       	mov	r20, r24
 5a8:	8a 81       	ldd	r24, Y+2	; 0x02
 5aa:	28 2f       	mov	r18, r24
 5ac:	30 e0       	ldi	r19, 0x00	; 0
 5ae:	81 e0       	ldi	r24, 0x01	; 1
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	02 2e       	mov	r0, r18
 5b4:	02 c0       	rjmp	.+4      	; 0x5ba <GPIO_voidTogPin+0x6c>
 5b6:	88 0f       	add	r24, r24
 5b8:	99 1f       	adc	r25, r25
 5ba:	0a 94       	dec	r0
 5bc:	e2 f7       	brpl	.-8      	; 0x5b6 <GPIO_voidTogPin+0x68>
 5be:	84 27       	eor	r24, r20
 5c0:	8c 93       	st	X, r24
 5c2:	3b c0       	rjmp	.+118    	; 0x63a <GPIO_voidTogPin+0xec>
				break ;             
			case GPIOB :            
				TOG_BIT(PORTB,copy_u8Pin);
 5c4:	a8 e3       	ldi	r26, 0x38	; 56
 5c6:	b0 e0       	ldi	r27, 0x00	; 0
 5c8:	e8 e3       	ldi	r30, 0x38	; 56
 5ca:	f0 e0       	ldi	r31, 0x00	; 0
 5cc:	80 81       	ld	r24, Z
 5ce:	48 2f       	mov	r20, r24
 5d0:	8a 81       	ldd	r24, Y+2	; 0x02
 5d2:	28 2f       	mov	r18, r24
 5d4:	30 e0       	ldi	r19, 0x00	; 0
 5d6:	81 e0       	ldi	r24, 0x01	; 1
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	02 2e       	mov	r0, r18
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <GPIO_voidTogPin+0x94>
 5de:	88 0f       	add	r24, r24
 5e0:	99 1f       	adc	r25, r25
 5e2:	0a 94       	dec	r0
 5e4:	e2 f7       	brpl	.-8      	; 0x5de <GPIO_voidTogPin+0x90>
 5e6:	84 27       	eor	r24, r20
 5e8:	8c 93       	st	X, r24
 5ea:	27 c0       	rjmp	.+78     	; 0x63a <GPIO_voidTogPin+0xec>
				break ;             
			case GPIOC :            
				TOG_BIT(PORTC,copy_u8Pin);
 5ec:	a5 e3       	ldi	r26, 0x35	; 53
 5ee:	b0 e0       	ldi	r27, 0x00	; 0
 5f0:	e5 e3       	ldi	r30, 0x35	; 53
 5f2:	f0 e0       	ldi	r31, 0x00	; 0
 5f4:	80 81       	ld	r24, Z
 5f6:	48 2f       	mov	r20, r24
 5f8:	8a 81       	ldd	r24, Y+2	; 0x02
 5fa:	28 2f       	mov	r18, r24
 5fc:	30 e0       	ldi	r19, 0x00	; 0
 5fe:	81 e0       	ldi	r24, 0x01	; 1
 600:	90 e0       	ldi	r25, 0x00	; 0
 602:	02 2e       	mov	r0, r18
 604:	02 c0       	rjmp	.+4      	; 0x60a <GPIO_voidTogPin+0xbc>
 606:	88 0f       	add	r24, r24
 608:	99 1f       	adc	r25, r25
 60a:	0a 94       	dec	r0
 60c:	e2 f7       	brpl	.-8      	; 0x606 <GPIO_voidTogPin+0xb8>
 60e:	84 27       	eor	r24, r20
 610:	8c 93       	st	X, r24
 612:	13 c0       	rjmp	.+38     	; 0x63a <GPIO_voidTogPin+0xec>
				break ;             
			case GPIOD : 
				TOG_BIT(PORTD,copy_u8Pin);
 614:	a2 e3       	ldi	r26, 0x32	; 50
 616:	b0 e0       	ldi	r27, 0x00	; 0
 618:	e2 e3       	ldi	r30, 0x32	; 50
 61a:	f0 e0       	ldi	r31, 0x00	; 0
 61c:	80 81       	ld	r24, Z
 61e:	48 2f       	mov	r20, r24
 620:	8a 81       	ldd	r24, Y+2	; 0x02
 622:	28 2f       	mov	r18, r24
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	81 e0       	ldi	r24, 0x01	; 1
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	02 2e       	mov	r0, r18
 62c:	02 c0       	rjmp	.+4      	; 0x632 <GPIO_voidTogPin+0xe4>
 62e:	88 0f       	add	r24, r24
 630:	99 1f       	adc	r25, r25
 632:	0a 94       	dec	r0
 634:	e2 f7       	brpl	.-8      	; 0x62e <GPIO_voidTogPin+0xe0>
 636:	84 27       	eor	r24, r20
 638:	8c 93       	st	X, r24
			default:
			break;
		}
		
		
	}
 63a:	0f 90       	pop	r0
 63c:	0f 90       	pop	r0
 63e:	0f 90       	pop	r0
 640:	0f 90       	pop	r0
 642:	cf 91       	pop	r28
 644:	df 91       	pop	r29
 646:	08 95       	ret

00000648 <GPIO_voidSetPortDDR>:
	void GPIO_voidSetPortDDR (u8  copy_u8Port , u8 copy_u8Mode )
	{
 648:	df 93       	push	r29
 64a:	cf 93       	push	r28
 64c:	00 d0       	rcall	.+0      	; 0x64e <GPIO_voidSetPortDDR+0x6>
 64e:	00 d0       	rcall	.+0      	; 0x650 <GPIO_voidSetPortDDR+0x8>
 650:	cd b7       	in	r28, 0x3d	; 61
 652:	de b7       	in	r29, 0x3e	; 62
 654:	89 83       	std	Y+1, r24	; 0x01
 656:	6a 83       	std	Y+2, r22	; 0x02
		switch(copy_u8Port)
 658:	89 81       	ldd	r24, Y+1	; 0x01
 65a:	28 2f       	mov	r18, r24
 65c:	30 e0       	ldi	r19, 0x00	; 0
 65e:	3c 83       	std	Y+4, r19	; 0x04
 660:	2b 83       	std	Y+3, r18	; 0x03
 662:	8b 81       	ldd	r24, Y+3	; 0x03
 664:	9c 81       	ldd	r25, Y+4	; 0x04
 666:	81 30       	cpi	r24, 0x01	; 1
 668:	91 05       	cpc	r25, r1
 66a:	09 f1       	breq	.+66     	; 0x6ae <GPIO_voidSetPortDDR+0x66>
 66c:	2b 81       	ldd	r18, Y+3	; 0x03
 66e:	3c 81       	ldd	r19, Y+4	; 0x04
 670:	22 30       	cpi	r18, 0x02	; 2
 672:	31 05       	cpc	r19, r1
 674:	2c f4       	brge	.+10     	; 0x680 <GPIO_voidSetPortDDR+0x38>
 676:	8b 81       	ldd	r24, Y+3	; 0x03
 678:	9c 81       	ldd	r25, Y+4	; 0x04
 67a:	00 97       	sbiw	r24, 0x00	; 0
 67c:	61 f0       	breq	.+24     	; 0x696 <GPIO_voidSetPortDDR+0x4e>
 67e:	3a c0       	rjmp	.+116    	; 0x6f4 <GPIO_voidSetPortDDR+0xac>
 680:	2b 81       	ldd	r18, Y+3	; 0x03
 682:	3c 81       	ldd	r19, Y+4	; 0x04
 684:	22 30       	cpi	r18, 0x02	; 2
 686:	31 05       	cpc	r19, r1
 688:	f1 f0       	breq	.+60     	; 0x6c6 <GPIO_voidSetPortDDR+0x7e>
 68a:	8b 81       	ldd	r24, Y+3	; 0x03
 68c:	9c 81       	ldd	r25, Y+4	; 0x04
 68e:	83 30       	cpi	r24, 0x03	; 3
 690:	91 05       	cpc	r25, r1
 692:	29 f1       	breq	.+74     	; 0x6de <GPIO_voidSetPortDDR+0x96>
 694:	2f c0       	rjmp	.+94     	; 0x6f4 <GPIO_voidSetPortDDR+0xac>
		{
			case GPIOA :
				if(copy_u8Mode ==OUTPUT )
 696:	8a 81       	ldd	r24, Y+2	; 0x02
 698:	81 30       	cpi	r24, 0x01	; 1
 69a:	29 f4       	brne	.+10     	; 0x6a6 <GPIO_voidSetPortDDR+0x5e>
				{
					DDRA= 0xFF;
 69c:	ea e3       	ldi	r30, 0x3A	; 58
 69e:	f0 e0       	ldi	r31, 0x00	; 0
 6a0:	8f ef       	ldi	r24, 0xFF	; 255
 6a2:	80 83       	st	Z, r24
 6a4:	27 c0       	rjmp	.+78     	; 0x6f4 <GPIO_voidSetPortDDR+0xac>
				}
				else {
					DDRA = 0x00 ;
 6a6:	ea e3       	ldi	r30, 0x3A	; 58
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	10 82       	st	Z, r1
 6ac:	23 c0       	rjmp	.+70     	; 0x6f4 <GPIO_voidSetPortDDR+0xac>
				}
				break;
			case GPIOB :
				if(copy_u8Mode ==OUTPUT )
 6ae:	8a 81       	ldd	r24, Y+2	; 0x02
 6b0:	81 30       	cpi	r24, 0x01	; 1
 6b2:	29 f4       	brne	.+10     	; 0x6be <GPIO_voidSetPortDDR+0x76>
				{
					DDRB = 0xFF;
 6b4:	e7 e3       	ldi	r30, 0x37	; 55
 6b6:	f0 e0       	ldi	r31, 0x00	; 0
 6b8:	8f ef       	ldi	r24, 0xFF	; 255
 6ba:	80 83       	st	Z, r24
 6bc:	1b c0       	rjmp	.+54     	; 0x6f4 <GPIO_voidSetPortDDR+0xac>
				}
				else {
					DDRB = 0x00;
 6be:	e7 e3       	ldi	r30, 0x37	; 55
 6c0:	f0 e0       	ldi	r31, 0x00	; 0
 6c2:	10 82       	st	Z, r1
 6c4:	17 c0       	rjmp	.+46     	; 0x6f4 <GPIO_voidSetPortDDR+0xac>
				}
				break;
			case GPIOC :
				if(copy_u8Mode ==OUTPUT )
 6c6:	8a 81       	ldd	r24, Y+2	; 0x02
 6c8:	81 30       	cpi	r24, 0x01	; 1
 6ca:	29 f4       	brne	.+10     	; 0x6d6 <GPIO_voidSetPortDDR+0x8e>
				{
					DDRC = 0xFF ;
 6cc:	e4 e3       	ldi	r30, 0x34	; 52
 6ce:	f0 e0       	ldi	r31, 0x00	; 0
 6d0:	8f ef       	ldi	r24, 0xFF	; 255
 6d2:	80 83       	st	Z, r24
 6d4:	0f c0       	rjmp	.+30     	; 0x6f4 <GPIO_voidSetPortDDR+0xac>
				}
				else {
					DDRC = 0x00 ;
 6d6:	e4 e3       	ldi	r30, 0x34	; 52
 6d8:	f0 e0       	ldi	r31, 0x00	; 0
 6da:	10 82       	st	Z, r1
 6dc:	0b c0       	rjmp	.+22     	; 0x6f4 <GPIO_voidSetPortDDR+0xac>
				}
				break;
			case GPIOD :
				if(copy_u8Mode ==OUTPUT )
 6de:	8a 81       	ldd	r24, Y+2	; 0x02
 6e0:	81 30       	cpi	r24, 0x01	; 1
 6e2:	29 f4       	brne	.+10     	; 0x6ee <GPIO_voidSetPortDDR+0xa6>
				{
					DDRD = 0xFF;
 6e4:	e1 e3       	ldi	r30, 0x31	; 49
 6e6:	f0 e0       	ldi	r31, 0x00	; 0
 6e8:	8f ef       	ldi	r24, 0xFF	; 255
 6ea:	80 83       	st	Z, r24
 6ec:	03 c0       	rjmp	.+6      	; 0x6f4 <GPIO_voidSetPortDDR+0xac>
				}
				else {
					DDRD = 0x00;
 6ee:	e1 e3       	ldi	r30, 0x31	; 49
 6f0:	f0 e0       	ldi	r31, 0x00	; 0
 6f2:	10 82       	st	Z, r1
				}
				break;	
			default:
				break;
		}
	}
 6f4:	0f 90       	pop	r0
 6f6:	0f 90       	pop	r0
 6f8:	0f 90       	pop	r0
 6fa:	0f 90       	pop	r0
 6fc:	cf 91       	pop	r28
 6fe:	df 91       	pop	r29
 700:	08 95       	ret

00000702 <GPIO_voidWritePort>:
	void	GPIO_voidWritePort (u8 copy_u8Port , u8 copy_u8Value)
	{
 702:	df 93       	push	r29
 704:	cf 93       	push	r28
 706:	00 d0       	rcall	.+0      	; 0x708 <GPIO_voidWritePort+0x6>
 708:	00 d0       	rcall	.+0      	; 0x70a <GPIO_voidWritePort+0x8>
 70a:	cd b7       	in	r28, 0x3d	; 61
 70c:	de b7       	in	r29, 0x3e	; 62
 70e:	89 83       	std	Y+1, r24	; 0x01
 710:	6a 83       	std	Y+2, r22	; 0x02
			switch(copy_u8Port)
 712:	89 81       	ldd	r24, Y+1	; 0x01
 714:	28 2f       	mov	r18, r24
 716:	30 e0       	ldi	r19, 0x00	; 0
 718:	3c 83       	std	Y+4, r19	; 0x04
 71a:	2b 83       	std	Y+3, r18	; 0x03
 71c:	8b 81       	ldd	r24, Y+3	; 0x03
 71e:	9c 81       	ldd	r25, Y+4	; 0x04
 720:	81 30       	cpi	r24, 0x01	; 1
 722:	91 05       	cpc	r25, r1
 724:	d1 f0       	breq	.+52     	; 0x75a <GPIO_voidWritePort+0x58>
 726:	2b 81       	ldd	r18, Y+3	; 0x03
 728:	3c 81       	ldd	r19, Y+4	; 0x04
 72a:	22 30       	cpi	r18, 0x02	; 2
 72c:	31 05       	cpc	r19, r1
 72e:	2c f4       	brge	.+10     	; 0x73a <GPIO_voidWritePort+0x38>
 730:	8b 81       	ldd	r24, Y+3	; 0x03
 732:	9c 81       	ldd	r25, Y+4	; 0x04
 734:	00 97       	sbiw	r24, 0x00	; 0
 736:	61 f0       	breq	.+24     	; 0x750 <GPIO_voidWritePort+0x4e>
 738:	1e c0       	rjmp	.+60     	; 0x776 <GPIO_voidWritePort+0x74>
 73a:	2b 81       	ldd	r18, Y+3	; 0x03
 73c:	3c 81       	ldd	r19, Y+4	; 0x04
 73e:	22 30       	cpi	r18, 0x02	; 2
 740:	31 05       	cpc	r19, r1
 742:	81 f0       	breq	.+32     	; 0x764 <GPIO_voidWritePort+0x62>
 744:	8b 81       	ldd	r24, Y+3	; 0x03
 746:	9c 81       	ldd	r25, Y+4	; 0x04
 748:	83 30       	cpi	r24, 0x03	; 3
 74a:	91 05       	cpc	r25, r1
 74c:	81 f0       	breq	.+32     	; 0x76e <GPIO_voidWritePort+0x6c>
 74e:	13 c0       	rjmp	.+38     	; 0x776 <GPIO_voidWritePort+0x74>
		{
			case GPIOA :
				PORTA = copy_u8Value ;
 750:	eb e3       	ldi	r30, 0x3B	; 59
 752:	f0 e0       	ldi	r31, 0x00	; 0
 754:	8a 81       	ldd	r24, Y+2	; 0x02
 756:	80 83       	st	Z, r24
 758:	0e c0       	rjmp	.+28     	; 0x776 <GPIO_voidWritePort+0x74>
				break;
			case GPIOB :
				PORTB = copy_u8Value;
 75a:	e8 e3       	ldi	r30, 0x38	; 56
 75c:	f0 e0       	ldi	r31, 0x00	; 0
 75e:	8a 81       	ldd	r24, Y+2	; 0x02
 760:	80 83       	st	Z, r24
 762:	09 c0       	rjmp	.+18     	; 0x776 <GPIO_voidWritePort+0x74>
				break;
			case GPIOC :
				PORTC = copy_u8Value;
 764:	e5 e3       	ldi	r30, 0x35	; 53
 766:	f0 e0       	ldi	r31, 0x00	; 0
 768:	8a 81       	ldd	r24, Y+2	; 0x02
 76a:	80 83       	st	Z, r24
 76c:	04 c0       	rjmp	.+8      	; 0x776 <GPIO_voidWritePort+0x74>
				break;
			case GPIOD :
				PORTD = copy_u8Value;
 76e:	e2 e3       	ldi	r30, 0x32	; 50
 770:	f0 e0       	ldi	r31, 0x00	; 0
 772:	8a 81       	ldd	r24, Y+2	; 0x02
 774:	80 83       	st	Z, r24
				break;
		}
		
			
			
		}
 776:	0f 90       	pop	r0
 778:	0f 90       	pop	r0
 77a:	0f 90       	pop	r0
 77c:	0f 90       	pop	r0
 77e:	cf 91       	pop	r28
 780:	df 91       	pop	r29
 782:	08 95       	ret

00000784 <GPIO_voidSetLowNippleDDR>:
	void GPIO_voidSetLowNippleDDR(u8 copy_u8Port , u8 copy_u8Mode)
	{
 784:	df 93       	push	r29
 786:	cf 93       	push	r28
 788:	00 d0       	rcall	.+0      	; 0x78a <GPIO_voidSetLowNippleDDR+0x6>
 78a:	0f 92       	push	r0
 78c:	cd b7       	in	r28, 0x3d	; 61
 78e:	de b7       	in	r29, 0x3e	; 62
 790:	8a 83       	std	Y+2, r24	; 0x02
 792:	6b 83       	std	Y+3, r22	; 0x03
		u8 i ;
		for (i= 0 ; i<4 ; i++){
 794:	19 82       	std	Y+1, r1	; 0x01
 796:	08 c0       	rjmp	.+16     	; 0x7a8 <GPIO_voidSetLowNippleDDR+0x24>
			GPIO_voidSetPinDDR(copy_u8Port , i ,copy_u8Mode );
 798:	8a 81       	ldd	r24, Y+2	; 0x02
 79a:	69 81       	ldd	r22, Y+1	; 0x01
 79c:	4b 81       	ldd	r20, Y+3	; 0x03
 79e:	0e 94 36 00 	call	0x6c	; 0x6c <GPIO_voidSetPinDDR>
			
		}
	void GPIO_voidSetLowNippleDDR(u8 copy_u8Port , u8 copy_u8Mode)
	{
		u8 i ;
		for (i= 0 ; i<4 ; i++){
 7a2:	89 81       	ldd	r24, Y+1	; 0x01
 7a4:	8f 5f       	subi	r24, 0xFF	; 255
 7a6:	89 83       	std	Y+1, r24	; 0x01
 7a8:	89 81       	ldd	r24, Y+1	; 0x01
 7aa:	84 30       	cpi	r24, 0x04	; 4
 7ac:	a8 f3       	brcs	.-22     	; 0x798 <GPIO_voidSetLowNippleDDR+0x14>
			GPIO_voidSetPinDDR(copy_u8Port , i ,copy_u8Mode );
		}
	}
 7ae:	0f 90       	pop	r0
 7b0:	0f 90       	pop	r0
 7b2:	0f 90       	pop	r0
 7b4:	cf 91       	pop	r28
 7b6:	df 91       	pop	r29
 7b8:	08 95       	ret

000007ba <GPIO_voidSetHighNippleDDR>:
	void GPIO_voidSetHighNippleDDR(u8 copy_u8Port , u8 copy_u8Mode)
	{
 7ba:	df 93       	push	r29
 7bc:	cf 93       	push	r28
 7be:	00 d0       	rcall	.+0      	; 0x7c0 <GPIO_voidSetHighNippleDDR+0x6>
 7c0:	0f 92       	push	r0
 7c2:	cd b7       	in	r28, 0x3d	; 61
 7c4:	de b7       	in	r29, 0x3e	; 62
 7c6:	8a 83       	std	Y+2, r24	; 0x02
 7c8:	6b 83       	std	Y+3, r22	; 0x03
		u8 i ;
		for (i= 4 ; i<8 ; i++){
 7ca:	84 e0       	ldi	r24, 0x04	; 4
 7cc:	89 83       	std	Y+1, r24	; 0x01
 7ce:	08 c0       	rjmp	.+16     	; 0x7e0 <GPIO_voidSetHighNippleDDR+0x26>
			GPIO_voidSetPinDDR(copy_u8Port , i ,copy_u8Mode );
 7d0:	8a 81       	ldd	r24, Y+2	; 0x02
 7d2:	69 81       	ldd	r22, Y+1	; 0x01
 7d4:	4b 81       	ldd	r20, Y+3	; 0x03
 7d6:	0e 94 36 00 	call	0x6c	; 0x6c <GPIO_voidSetPinDDR>
		}
	}
	void GPIO_voidSetHighNippleDDR(u8 copy_u8Port , u8 copy_u8Mode)
	{
		u8 i ;
		for (i= 4 ; i<8 ; i++){
 7da:	89 81       	ldd	r24, Y+1	; 0x01
 7dc:	8f 5f       	subi	r24, 0xFF	; 255
 7de:	89 83       	std	Y+1, r24	; 0x01
 7e0:	89 81       	ldd	r24, Y+1	; 0x01
 7e2:	88 30       	cpi	r24, 0x08	; 8
 7e4:	a8 f3       	brcs	.-22     	; 0x7d0 <GPIO_voidSetHighNippleDDR+0x16>
			GPIO_voidSetPinDDR(copy_u8Port , i ,copy_u8Mode );
		}
	}
 7e6:	0f 90       	pop	r0
 7e8:	0f 90       	pop	r0
 7ea:	0f 90       	pop	r0
 7ec:	cf 91       	pop	r28
 7ee:	df 91       	pop	r29
 7f0:	08 95       	ret

000007f2 <GPIO_voidWriteLowNipple>:
	void GPIO_voidWriteLowNipple (u8 copy_u8Port , u8 copy_u8Value )
	{
 7f2:	df 93       	push	r29
 7f4:	cf 93       	push	r28
 7f6:	00 d0       	rcall	.+0      	; 0x7f8 <GPIO_voidWriteLowNipple+0x6>
 7f8:	00 d0       	rcall	.+0      	; 0x7fa <GPIO_voidWriteLowNipple+0x8>
 7fa:	cd b7       	in	r28, 0x3d	; 61
 7fc:	de b7       	in	r29, 0x3e	; 62
 7fe:	89 83       	std	Y+1, r24	; 0x01
 800:	6a 83       	std	Y+2, r22	; 0x02
		copy_u8Value &= 0x0F;
 802:	8a 81       	ldd	r24, Y+2	; 0x02
 804:	8f 70       	andi	r24, 0x0F	; 15
 806:	8a 83       	std	Y+2, r24	; 0x02
		switch (copy_u8Port) {
 808:	89 81       	ldd	r24, Y+1	; 0x01
 80a:	28 2f       	mov	r18, r24
 80c:	30 e0       	ldi	r19, 0x00	; 0
 80e:	3c 83       	std	Y+4, r19	; 0x04
 810:	2b 83       	std	Y+3, r18	; 0x03
 812:	8b 81       	ldd	r24, Y+3	; 0x03
 814:	9c 81       	ldd	r25, Y+4	; 0x04
 816:	81 30       	cpi	r24, 0x01	; 1
 818:	91 05       	cpc	r25, r1
 81a:	29 f1       	breq	.+74     	; 0x866 <__stack+0x7>
 81c:	2b 81       	ldd	r18, Y+3	; 0x03
 81e:	3c 81       	ldd	r19, Y+4	; 0x04
 820:	22 30       	cpi	r18, 0x02	; 2
 822:	31 05       	cpc	r19, r1
 824:	2c f4       	brge	.+10     	; 0x830 <GPIO_voidWriteLowNipple+0x3e>
 826:	8b 81       	ldd	r24, Y+3	; 0x03
 828:	9c 81       	ldd	r25, Y+4	; 0x04
 82a:	00 97       	sbiw	r24, 0x00	; 0
 82c:	61 f0       	breq	.+24     	; 0x846 <GPIO_voidWriteLowNipple+0x54>
 82e:	4a c0       	rjmp	.+148    	; 0x8c4 <__stack+0x65>
 830:	2b 81       	ldd	r18, Y+3	; 0x03
 832:	3c 81       	ldd	r19, Y+4	; 0x04
 834:	22 30       	cpi	r18, 0x02	; 2
 836:	31 05       	cpc	r19, r1
 838:	31 f1       	breq	.+76     	; 0x886 <__stack+0x27>
 83a:	8b 81       	ldd	r24, Y+3	; 0x03
 83c:	9c 81       	ldd	r25, Y+4	; 0x04
 83e:	83 30       	cpi	r24, 0x03	; 3
 840:	91 05       	cpc	r25, r1
 842:	89 f1       	breq	.+98     	; 0x8a6 <__stack+0x47>
 844:	3f c0       	rjmp	.+126    	; 0x8c4 <__stack+0x65>
			case GPIOA :
				PORTA &= 0xF0 ; 
 846:	ab e3       	ldi	r26, 0x3B	; 59
 848:	b0 e0       	ldi	r27, 0x00	; 0
 84a:	eb e3       	ldi	r30, 0x3B	; 59
 84c:	f0 e0       	ldi	r31, 0x00	; 0
 84e:	80 81       	ld	r24, Z
 850:	80 7f       	andi	r24, 0xF0	; 240
 852:	8c 93       	st	X, r24
				PORTA |= copy_u8Value ;
 854:	ab e3       	ldi	r26, 0x3B	; 59
 856:	b0 e0       	ldi	r27, 0x00	; 0
 858:	eb e3       	ldi	r30, 0x3B	; 59
 85a:	f0 e0       	ldi	r31, 0x00	; 0
 85c:	90 81       	ld	r25, Z
 85e:	8a 81       	ldd	r24, Y+2	; 0x02
 860:	89 2b       	or	r24, r25
 862:	8c 93       	st	X, r24
 864:	2f c0       	rjmp	.+94     	; 0x8c4 <__stack+0x65>
				break;
			case GPIOB :
				PORTB &= 0xF0 ; 
 866:	a8 e3       	ldi	r26, 0x38	; 56
 868:	b0 e0       	ldi	r27, 0x00	; 0
 86a:	e8 e3       	ldi	r30, 0x38	; 56
 86c:	f0 e0       	ldi	r31, 0x00	; 0
 86e:	80 81       	ld	r24, Z
 870:	80 7f       	andi	r24, 0xF0	; 240
 872:	8c 93       	st	X, r24
				PORTB |= copy_u8Value ;
 874:	a8 e3       	ldi	r26, 0x38	; 56
 876:	b0 e0       	ldi	r27, 0x00	; 0
 878:	e8 e3       	ldi	r30, 0x38	; 56
 87a:	f0 e0       	ldi	r31, 0x00	; 0
 87c:	90 81       	ld	r25, Z
 87e:	8a 81       	ldd	r24, Y+2	; 0x02
 880:	89 2b       	or	r24, r25
 882:	8c 93       	st	X, r24
 884:	1f c0       	rjmp	.+62     	; 0x8c4 <__stack+0x65>
				break;
			case GPIOC :
				PORTC &= 0xF0 ; 
 886:	a5 e3       	ldi	r26, 0x35	; 53
 888:	b0 e0       	ldi	r27, 0x00	; 0
 88a:	e5 e3       	ldi	r30, 0x35	; 53
 88c:	f0 e0       	ldi	r31, 0x00	; 0
 88e:	80 81       	ld	r24, Z
 890:	80 7f       	andi	r24, 0xF0	; 240
 892:	8c 93       	st	X, r24
				PORTC |= copy_u8Value ;
 894:	a5 e3       	ldi	r26, 0x35	; 53
 896:	b0 e0       	ldi	r27, 0x00	; 0
 898:	e5 e3       	ldi	r30, 0x35	; 53
 89a:	f0 e0       	ldi	r31, 0x00	; 0
 89c:	90 81       	ld	r25, Z
 89e:	8a 81       	ldd	r24, Y+2	; 0x02
 8a0:	89 2b       	or	r24, r25
 8a2:	8c 93       	st	X, r24
 8a4:	0f c0       	rjmp	.+30     	; 0x8c4 <__stack+0x65>
				break;
			case GPIOD :
				PORTD &= 0xF0 ; 
 8a6:	a2 e3       	ldi	r26, 0x32	; 50
 8a8:	b0 e0       	ldi	r27, 0x00	; 0
 8aa:	e2 e3       	ldi	r30, 0x32	; 50
 8ac:	f0 e0       	ldi	r31, 0x00	; 0
 8ae:	80 81       	ld	r24, Z
 8b0:	80 7f       	andi	r24, 0xF0	; 240
 8b2:	8c 93       	st	X, r24
				PORTD |= copy_u8Value ;
 8b4:	a2 e3       	ldi	r26, 0x32	; 50
 8b6:	b0 e0       	ldi	r27, 0x00	; 0
 8b8:	e2 e3       	ldi	r30, 0x32	; 50
 8ba:	f0 e0       	ldi	r31, 0x00	; 0
 8bc:	90 81       	ld	r25, Z
 8be:	8a 81       	ldd	r24, Y+2	; 0x02
 8c0:	89 2b       	or	r24, r25
 8c2:	8c 93       	st	X, r24
				break;	
		}
	}
 8c4:	0f 90       	pop	r0
 8c6:	0f 90       	pop	r0
 8c8:	0f 90       	pop	r0
 8ca:	0f 90       	pop	r0
 8cc:	cf 91       	pop	r28
 8ce:	df 91       	pop	r29
 8d0:	08 95       	ret

000008d2 <GPIO_voidWriteHighNipple>:
	void GPIO_voidWriteHighNipple (u8 copy_u8Port , u8 copy_u8Value )
	{
 8d2:	df 93       	push	r29
 8d4:	cf 93       	push	r28
 8d6:	00 d0       	rcall	.+0      	; 0x8d8 <GPIO_voidWriteHighNipple+0x6>
 8d8:	00 d0       	rcall	.+0      	; 0x8da <GPIO_voidWriteHighNipple+0x8>
 8da:	cd b7       	in	r28, 0x3d	; 61
 8dc:	de b7       	in	r29, 0x3e	; 62
 8de:	89 83       	std	Y+1, r24	; 0x01
 8e0:	6a 83       	std	Y+2, r22	; 0x02
		copy_u8Value &= 0xF0;
 8e2:	8a 81       	ldd	r24, Y+2	; 0x02
 8e4:	80 7f       	andi	r24, 0xF0	; 240
 8e6:	8a 83       	std	Y+2, r24	; 0x02
		switch (copy_u8Port) {
 8e8:	89 81       	ldd	r24, Y+1	; 0x01
 8ea:	28 2f       	mov	r18, r24
 8ec:	30 e0       	ldi	r19, 0x00	; 0
 8ee:	3c 83       	std	Y+4, r19	; 0x04
 8f0:	2b 83       	std	Y+3, r18	; 0x03
 8f2:	8b 81       	ldd	r24, Y+3	; 0x03
 8f4:	9c 81       	ldd	r25, Y+4	; 0x04
 8f6:	81 30       	cpi	r24, 0x01	; 1
 8f8:	91 05       	cpc	r25, r1
 8fa:	29 f1       	breq	.+74     	; 0x946 <GPIO_voidWriteHighNipple+0x74>
 8fc:	2b 81       	ldd	r18, Y+3	; 0x03
 8fe:	3c 81       	ldd	r19, Y+4	; 0x04
 900:	22 30       	cpi	r18, 0x02	; 2
 902:	31 05       	cpc	r19, r1
 904:	2c f4       	brge	.+10     	; 0x910 <GPIO_voidWriteHighNipple+0x3e>
 906:	8b 81       	ldd	r24, Y+3	; 0x03
 908:	9c 81       	ldd	r25, Y+4	; 0x04
 90a:	00 97       	sbiw	r24, 0x00	; 0
 90c:	61 f0       	breq	.+24     	; 0x926 <GPIO_voidWriteHighNipple+0x54>
 90e:	4a c0       	rjmp	.+148    	; 0x9a4 <GPIO_voidWriteHighNipple+0xd2>
 910:	2b 81       	ldd	r18, Y+3	; 0x03
 912:	3c 81       	ldd	r19, Y+4	; 0x04
 914:	22 30       	cpi	r18, 0x02	; 2
 916:	31 05       	cpc	r19, r1
 918:	31 f1       	breq	.+76     	; 0x966 <GPIO_voidWriteHighNipple+0x94>
 91a:	8b 81       	ldd	r24, Y+3	; 0x03
 91c:	9c 81       	ldd	r25, Y+4	; 0x04
 91e:	83 30       	cpi	r24, 0x03	; 3
 920:	91 05       	cpc	r25, r1
 922:	89 f1       	breq	.+98     	; 0x986 <GPIO_voidWriteHighNipple+0xb4>
 924:	3f c0       	rjmp	.+126    	; 0x9a4 <GPIO_voidWriteHighNipple+0xd2>
			case GPIOA :
				PORTA &= 0x0F ; 
 926:	ab e3       	ldi	r26, 0x3B	; 59
 928:	b0 e0       	ldi	r27, 0x00	; 0
 92a:	eb e3       	ldi	r30, 0x3B	; 59
 92c:	f0 e0       	ldi	r31, 0x00	; 0
 92e:	80 81       	ld	r24, Z
 930:	8f 70       	andi	r24, 0x0F	; 15
 932:	8c 93       	st	X, r24
				PORTA |= copy_u8Value ;
 934:	ab e3       	ldi	r26, 0x3B	; 59
 936:	b0 e0       	ldi	r27, 0x00	; 0
 938:	eb e3       	ldi	r30, 0x3B	; 59
 93a:	f0 e0       	ldi	r31, 0x00	; 0
 93c:	90 81       	ld	r25, Z
 93e:	8a 81       	ldd	r24, Y+2	; 0x02
 940:	89 2b       	or	r24, r25
 942:	8c 93       	st	X, r24
 944:	2f c0       	rjmp	.+94     	; 0x9a4 <GPIO_voidWriteHighNipple+0xd2>
				break;
			case GPIOB :
				PORTB &= 0x0F ; 
 946:	a8 e3       	ldi	r26, 0x38	; 56
 948:	b0 e0       	ldi	r27, 0x00	; 0
 94a:	e8 e3       	ldi	r30, 0x38	; 56
 94c:	f0 e0       	ldi	r31, 0x00	; 0
 94e:	80 81       	ld	r24, Z
 950:	8f 70       	andi	r24, 0x0F	; 15
 952:	8c 93       	st	X, r24
				PORTB |= copy_u8Value ;
 954:	a8 e3       	ldi	r26, 0x38	; 56
 956:	b0 e0       	ldi	r27, 0x00	; 0
 958:	e8 e3       	ldi	r30, 0x38	; 56
 95a:	f0 e0       	ldi	r31, 0x00	; 0
 95c:	90 81       	ld	r25, Z
 95e:	8a 81       	ldd	r24, Y+2	; 0x02
 960:	89 2b       	or	r24, r25
 962:	8c 93       	st	X, r24
 964:	1f c0       	rjmp	.+62     	; 0x9a4 <GPIO_voidWriteHighNipple+0xd2>
				break;
			case GPIOC :
				PORTC &= 0x0F ; 
 966:	a5 e3       	ldi	r26, 0x35	; 53
 968:	b0 e0       	ldi	r27, 0x00	; 0
 96a:	e5 e3       	ldi	r30, 0x35	; 53
 96c:	f0 e0       	ldi	r31, 0x00	; 0
 96e:	80 81       	ld	r24, Z
 970:	8f 70       	andi	r24, 0x0F	; 15
 972:	8c 93       	st	X, r24
				PORTC |= copy_u8Value ;
 974:	a5 e3       	ldi	r26, 0x35	; 53
 976:	b0 e0       	ldi	r27, 0x00	; 0
 978:	e5 e3       	ldi	r30, 0x35	; 53
 97a:	f0 e0       	ldi	r31, 0x00	; 0
 97c:	90 81       	ld	r25, Z
 97e:	8a 81       	ldd	r24, Y+2	; 0x02
 980:	89 2b       	or	r24, r25
 982:	8c 93       	st	X, r24
 984:	0f c0       	rjmp	.+30     	; 0x9a4 <GPIO_voidWriteHighNipple+0xd2>
				break;
			case GPIOD :
				PORTD &= 0x0F ; 
 986:	a2 e3       	ldi	r26, 0x32	; 50
 988:	b0 e0       	ldi	r27, 0x00	; 0
 98a:	e2 e3       	ldi	r30, 0x32	; 50
 98c:	f0 e0       	ldi	r31, 0x00	; 0
 98e:	80 81       	ld	r24, Z
 990:	8f 70       	andi	r24, 0x0F	; 15
 992:	8c 93       	st	X, r24
				PORTD |= copy_u8Value ;
 994:	a2 e3       	ldi	r26, 0x32	; 50
 996:	b0 e0       	ldi	r27, 0x00	; 0
 998:	e2 e3       	ldi	r30, 0x32	; 50
 99a:	f0 e0       	ldi	r31, 0x00	; 0
 99c:	90 81       	ld	r25, Z
 99e:	8a 81       	ldd	r24, Y+2	; 0x02
 9a0:	89 2b       	or	r24, r25
 9a2:	8c 93       	st	X, r24
				break;	
		}
	}
 9a4:	0f 90       	pop	r0
 9a6:	0f 90       	pop	r0
 9a8:	0f 90       	pop	r0
 9aa:	0f 90       	pop	r0
 9ac:	cf 91       	pop	r28
 9ae:	df 91       	pop	r29
 9b0:	08 95       	ret

000009b2 <LED_voidTurnOn>:




void LED_voidTurnOn(u8 copy_u8port , u8 copy_u8pin)
{
 9b2:	df 93       	push	r29
 9b4:	cf 93       	push	r28
 9b6:	00 d0       	rcall	.+0      	; 0x9b8 <LED_voidTurnOn+0x6>
 9b8:	cd b7       	in	r28, 0x3d	; 61
 9ba:	de b7       	in	r29, 0x3e	; 62
 9bc:	89 83       	std	Y+1, r24	; 0x01
 9be:	6a 83       	std	Y+2, r22	; 0x02
	GPIO_voidSetPinDDR(copy_u8port , copy_u8pin , OUTPUT );
 9c0:	89 81       	ldd	r24, Y+1	; 0x01
 9c2:	6a 81       	ldd	r22, Y+2	; 0x02
 9c4:	41 e0       	ldi	r20, 0x01	; 1
 9c6:	0e 94 36 00 	call	0x6c	; 0x6c <GPIO_voidSetPinDDR>
	GPIO_voidWritePin (copy_u8port , copy_u8pin , HIGH);
 9ca:	89 81       	ldd	r24, Y+1	; 0x01
 9cc:	6a 81       	ldd	r22, Y+2	; 0x02
 9ce:	41 e0       	ldi	r20, 0x01	; 1
 9d0:	0e 94 19 01 	call	0x232	; 0x232 <GPIO_voidWritePin>
}
 9d4:	0f 90       	pop	r0
 9d6:	0f 90       	pop	r0
 9d8:	cf 91       	pop	r28
 9da:	df 91       	pop	r29
 9dc:	08 95       	ret

000009de <LED_voidTurnOff>:
void LED_voidTurnOff(u8 copy_u8port , u8 copy_u8pin)
{
 9de:	df 93       	push	r29
 9e0:	cf 93       	push	r28
 9e2:	00 d0       	rcall	.+0      	; 0x9e4 <LED_voidTurnOff+0x6>
 9e4:	cd b7       	in	r28, 0x3d	; 61
 9e6:	de b7       	in	r29, 0x3e	; 62
 9e8:	89 83       	std	Y+1, r24	; 0x01
 9ea:	6a 83       	std	Y+2, r22	; 0x02
	GPIO_voidSetPinDDR(copy_u8port , copy_u8pin , OUTPUT );
 9ec:	89 81       	ldd	r24, Y+1	; 0x01
 9ee:	6a 81       	ldd	r22, Y+2	; 0x02
 9f0:	41 e0       	ldi	r20, 0x01	; 1
 9f2:	0e 94 36 00 	call	0x6c	; 0x6c <GPIO_voidSetPinDDR>
	GPIO_voidWritePin (copy_u8port , copy_u8pin , LOW);
 9f6:	89 81       	ldd	r24, Y+1	; 0x01
 9f8:	6a 81       	ldd	r22, Y+2	; 0x02
 9fa:	40 e0       	ldi	r20, 0x00	; 0
 9fc:	0e 94 19 01 	call	0x232	; 0x232 <GPIO_voidWritePin>
}
 a00:	0f 90       	pop	r0
 a02:	0f 90       	pop	r0
 a04:	cf 91       	pop	r28
 a06:	df 91       	pop	r29
 a08:	08 95       	ret

00000a0a <main>:

#include "GPIO_interface.h"
#include "LED_interface.h"

int main (void)
{
 a0a:	df 93       	push	r29
 a0c:	cf 93       	push	r28
 a0e:	cd b7       	in	r28, 0x3d	; 61
 a10:	de b7       	in	r29, 0x3e	; 62
	while (1)
	{
	LED_voidTurnOn(GPIOA , 2);
 a12:	80 e0       	ldi	r24, 0x00	; 0
 a14:	62 e0       	ldi	r22, 0x02	; 2
 a16:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <LED_voidTurnOn>
 a1a:	fb cf       	rjmp	.-10     	; 0xa12 <main+0x8>

00000a1c <_exit>:
 a1c:	f8 94       	cli

00000a1e <__stop_program>:
 a1e:	ff cf       	rjmp	.-2      	; 0xa1e <__stop_program>
